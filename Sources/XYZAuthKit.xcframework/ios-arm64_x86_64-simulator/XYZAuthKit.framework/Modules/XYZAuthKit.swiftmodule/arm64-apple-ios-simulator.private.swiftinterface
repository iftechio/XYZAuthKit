// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name XYZAuthKit
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers @_Concurrency.MainActor final public class XYZAuth {
  @_Concurrency.MainActor public static let version: Swift.String
  @objc deinit
}
extension XYZAuthKit.XYZAuth {
  @_Concurrency.MainActor public static func registerApp(_ clientId: Swift.String, redirectUri: Swift.String)
  @_Concurrency.MainActor public static func isAppInstalled() -> Swift.Bool
  @_Concurrency.MainActor public static func authorize(completed: @escaping (Swift.Result<Swift.String, XYZAuthKit.XYZAuthError>) -> Swift.Void)
  @_Concurrency.MainActor public static func handleOpen(_ url: Foundation.URL) -> Swift.Bool
  @_Concurrency.MainActor public static func handleUniversalLink(_ userActivity: Foundation.NSUserActivity) -> Swift.Bool
}
public enum XYZAuthError : Swift.Error, Swift.Equatable, Foundation.LocalizedError {
  case unknown
  case sdkUninitialized
  case appNotInstalled
  case invalidCallbackParams
  case userCancelled
  case internalError(description: Swift.String)
  public var errorDescription: Swift.String? {
    get
  }
  public static func == (a: XYZAuthKit.XYZAuthError, b: XYZAuthKit.XYZAuthError) -> Swift.Bool
}
extension XYZAuthKit.XYZAuth : Swift.Sendable {}
